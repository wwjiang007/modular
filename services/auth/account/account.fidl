// Copyright 2017 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module modular.auth;

// Stores attributes related to an account that is exposed to device shell.
// A list of existing account(s) can be obtained via
// UserProvider.PreviousUsers() and a new account can be added via
// UserProvider.AddAccount().
struct Account {
  // A randomly generated identifier that is used to identify this
  // account on this device. This is meant to be used by device shell when it
  // wants to login as a user who has previously logged in.
  string id;

  // The identity provider that was used to authenticate the user on this
  // device.
  IdentityProvider identity_provider;

  // The name that is displayed on the device shell while logging in. Current
  // implementation populates it from a device shell provided string, in the
  // future we should be able to derive this from the identity provider.
  string display_name;
};

// The currently supported identity providers. An identity provider provides
// identifiers for users to interact with the system and may provide information
// about the user that is known to the provider.
enum IdentityProvider {
  // An identity provider that's used for development and
  // testing. If this identity provider is chosen, the Framework will continue
  // as if it has identified the user. Note that the users that use this id
  // provider would not get cloud ledger access (unless done via a side
  // channel).
  DEV,

  // Uses Google as the identity provider. Doing this requires a working network
  // connection and a web view.
  GOOGLE,
};

