// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module modular;

import "apps/ledger/services/internal/internal.fidl";
import "apps/modular/services/config/config.fidl";
import "apps/modular/services/user/user_context.fidl";
import "apps/mozart/services/views/view_token.fidl";

// The device_runner application (there is no |DeviceRunner| service) requests
// an instance of this service in order to launch and display a |UserRunner| per
// user.
[ServiceName="modular.UserRunnerFactory"]  // Created by user_runner application.
interface UserRunnerFactory {
  // Launches a user runner instance for a user identified by |user_id|.
  Create(array<uint8> user_id,
         string device_name,
         AppConfig user_shell,
         AppConfig story_shell,
         string? auth_token,
         ledger.LedgerRepository ledger_repository,
         UserContext user_context,
         mozart.ViewOwner& view_owner,
         UserRunner& user_runner);
};

// This interface allows a |UserRunnerFactory|'s client to monitor and control
// the life cycle of this |UserRunner|.
interface UserRunner {
  // This signals |UserRunner| to teardown itself. Upon response, the caller may
  // terminate the |UserRunner| process if it hasn't done so already.
  Terminate() => ();
};
