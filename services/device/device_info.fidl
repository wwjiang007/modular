// Copyright 2017 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module modular;

import "application/services/service_provider.fidl";

// Service for querying device specific attributes. This data is the same as 
// the DeviceMapEntry in the DeviceMap service for *this* device.
[ServiceName="modular::DeviceInfo"]
interface DeviceInfo {
  // Returns the device name of this device. This name is user editable and may
  // be the same between any of the user's devices.
  GetDeviceName() => (string device_name);

  // Semi-sticky device ID usable for syncing. Guarantees a unique device id
  // that no another hardware will be using while this device is syncing.
  // WARNING: This ID is persisted for an arbitrary amount of time and MAY be
  // revoked or changed between launches of this service on this hardware.
  GetDeviceIdForSyncing() => (string device_id);

  // Returns the device's intended usage profile.
  GetDeviceProfile() => (string jsonProfile);
};
